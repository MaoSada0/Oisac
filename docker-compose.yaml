version: "3.8"
services:
  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongo

  postgres:
    image: postgres:16.4
    container_name: postgres_db
    hostname: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: rootuser
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: oisacdb
    ports:
      - "32768:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis-lru-cache
    ports:
      - "6379:6379"
    command: [ "redis-server", "--maxmemory", "100mb", "--maxmemory-policy", "allkeys-lru" ]
    volumes:
      - redis-data:/data
    networks:
      - redis-net
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper-docker
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    container_name: kafka_docker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

volumes:
  mongo_data: {}
  postgres_data:
    driver: local
  redis-data:

networks:
  redis-net:
  default:
    name: network
